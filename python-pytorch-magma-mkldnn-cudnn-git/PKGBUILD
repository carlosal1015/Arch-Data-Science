# Maintainer: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Stephen Zhang <zsrkmyn at gmail dot com>
# Update by Mamy Andr√©-Ratsimbazafy <Github mratsim>
# For Magma, MKLDNN, MKL, CUDNN, OpenCV (for video input)

pkgname=("python-pytorch-magma-mkldnn-cudnn-git")
_pkgname="pytorch"
pkgver=v1.0rc0.r2041.g8c55e56c37
pkgrel=1
pkgdesc="Tensors and Dynamic neural networks in Python with strong GPU acceleration"
arch=('x86_64')
url="https://pytorch.org"
license=('BSD')
depends=('python' 'python-yaml' 'python-numpy' 'opencv' 'intel-mkl' 'mkl-dnn' 'cuda' 'cudnn' 'magma' 'nccl' 'cub')
makedepends=('python-setuptools' 'cmake' 'git' 'intel-compiler-base')
provides=('python-pytorch')
conflicts=('python-pytorch')
source=("git+https://github.com/pytorch/pytorch.git")
sha256sums=('SKIP')

pkgver() {
  cd "${_pkgname}"
  git describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd "${_pkgname}"

  git submodule update --init --recursive
}

build() {
  export USE_OPENCV=ON 
  export USE_FFMPEG=ON
  export USE_MKLDNN=ON
  export USE_NNPACK=ON # A bit redundant with MKLDNN hopefully PyTorch choose the best depending on op
  export USE_CUDA=ON
  export USE_CUDNN=ON
  export USE_NCCL=ON
  export USE_OPENCL=OFF
  export USE_ROCM=OFF
  export USE_OPENMP=ON
  export USE_NUMPY=ON
  export USE_MAGMA=ON
  
  export CC=gcc-7
  export CXX=g++-7
  export CUDAHOSTCXX=g++-7
  export CUDA_HOME=/opt/cuda
  export CUDNN_LIB_DIR=/usr/lib
  export CUDNN_INCLUDE_DIR=/usr/include
  export TORCH_CUDA_ARCH_LIST="7.5" # Consumer Turing
  export MAGMA_HOME=/opt/magma 
  export OPENCV_INCLUDE_DIRS=/usr/include/opencv4
  export FFMPEG_INCLUDE_DIR=/usr/include # libavcodec, libavutils
  export FFMPEG_LIBRARIES=/usr/lib # libavcodec
  export CUB_INCLUDE_DIRS=/usr/include # For system CUB, otherwise PyTorch picks it from thirdparty submodules

  # Link to Intel OpenMP like MKL-DNN
  # https://github.com/pytorch/pytorch/issues/12535
  export OpenMP_C_FLAGS="-liomp5"
  export OpenMP_CXX_FLAGS="-liomp5"
  export OpenMP_C_LIB_NAMES="iomp5"
  export OpenMP_CXX_LIB_NAMES="iomp5"
  export CMAKE_EXE_LINKER_FLAGS="-liomp5"

  source /opt/intel/mkl/bin/mklvars.sh intel64
  source /opt/intel/pkg_bin/compilervars.sh intel64
  
  # Python flags  
  export NO_CUDA=0
  export WITH_CUDNN=1


  cd "$srcdir/${_pkgname}"
  python setup.py build
}

package() {
  cd "$srcdir/${_pkgname}"
  python setup.py install --root="$pkgdir"/ --optimize=1 --skip-build
  install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE.txt"
}

# vim:set ts=2 sw=2 et:
