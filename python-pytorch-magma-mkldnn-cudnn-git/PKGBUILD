# Maintainer: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Stephen Zhang <zsrkmyn at gmail dot com>
# Update by Mamy Andr√©-Ratsimbazafy <Github mratsim>
# For Magma, MKLDNN, MKL, CUDNN, OpenCV (for video input)

pkgname=("python-pytorch-magma-mkldnn-cudnn-git")
_pkgname="pytorch"
pkgver=v1.0rc0.r122.gc2a57d082d
pkgrel=1
pkgdesc="Tensors and Dynamic neural networks in Python with strong GPU acceleration"
arch=('x86_64')
url="https://pytorch.org"
license=('BSD')
depends=('python' 'python-yaml' 'python-numpy' 'opencv' 'intel-mkl' 'mkl-dnn' 'cuda' 'cudnn' 'magma')
makedepends=('python' 'python-setuptools' 'python-yaml' 'python-numpy' 'cmake' 'git' 'nccl' 'intel-compiler-base')
provides=('python-pytorch')
conflicts=('python-pytorch')
source=("git+https://github.com/pytorch/pytorch.git"
        "git+https://github.com/catchorg/Catch2"
        "git+https://github.com/pybind/pybind11"
        "git+https://github.com/NVlabs/cub"
        "git+https://github.com/eigenteam/eigen-git-mirror"
        "git+https://github.com/google/googletest"
        "git+https://github.com/NervanaSystems/nervanagpu"
        "git+https://github.com/google/benchmark"
        "git+https://github.com/google/protobuf"
        "git+https://github.com/Yangqing/ios-cmake"
        "git+https://github.com/Maratyszcza/NNPACK"
        "git+https://github.com/facebookincubator/gloo"
        "git+https://github.com/Maratyszcza/pthreadpool"
        "git+https://github.com/Maratyszcza/FXdiv"
        "git+https://github.com/Maratyszcza/FP16"
        "git+https://github.com/Maratyszcza/psimd"
        "git+https://github.com/facebook/zstd"
        "git+https://github.com/Maratyszcza/cpuinfo"
        "git+https://github.com/PeachPy/enum34"
        "git+https://github.com/Maratyszcza/PeachPy"
        "git+https://github.com/benjaminp/six"
        "git+https://github.com/ARM-software/ComputeLibrary"
        "git+https://github.com/onnx/onnx"
        "git+https://github.com/USCILab/cereal"
        "git+https://github.com/onnx/onnx-tensorrt"
        "git+https://github.com/shibatch/sleef"
        "git+https://github.com/intel/ideep"
        )
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            )
pkgver() {
  cd "${_pkgname}"
  git describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd "${_pkgname}"

  git submodule init
  git config submodule."third_party/catch".url "${srcdir}"/Catch2
  git config submodule."third_party/pybind11".url "${srcdir}"/pybind11
  git config submodule."third_party/cub".url "${srcdir}"/cub
  git config submodule."third_party/eigen".url "${srcdir}"/eigen-git-mirror
  git config submodule."third_party/googletest".url "${srcdir}"/googletest
  git config submodule."third_party/nervanagpu".url "${srcdir}"/nervanagpu
  git config submodule."third_party/benchmark".url "${srcdir}"/benchmark
  git config submodule."third_party/protobuf".url "${srcdir}"/protobuf
  git config submodule."third_party/ios-cmake".url "${srcdir}"/ios-cmake
  git config submodule."third_party/NNPACK".url "${srcdir}"/NNPACK
  git config submodule."third_party/gloo".url "${srcdir}"/gloo
  git config submodule."third_party/NNPACK_deps/pthread_ool".url "${srcdir}"/pthreadpool
  git config submodule."third_party/NNPACK_deps/FXdiv".url "${srcdir}"/FXdiv
  git config submodule."third_party/NNPACK_deps/FP16".url "${srcdir}"/FP16
  git config submodule."third_party/NNPACK_deps/psimd".url "${srcdir}"/psimd
  git config submodule."third_party/zstd".url "${srcdir}"/zstd
  git config submodule."third_party/cpuinfo".url "${srcdir}"/cpuinfo
  git config submodule."third_party/python-enum".url "${srcdir}"/enum34
  git config submodule."third_party/python-peachpy".url "${srcdir}"/PeachPy
  git config submodule."third_party/python-six".url "${srcdir}"/six
  git config submodule."third_party/ComputeLibrary".url "${srcdir}"/ComputeLibrary
  git config submodule."third_party/onnx".url "${srcdir}"/onnx
  git config submodule."third_party/cereal".url "${srcdir}"/cereal
  git config submodule."third_party/onnx-tensorrt".url "${srcdir}"/onnx-tensorrt
  git config submodule."third_party/sleef".url "${srcdir}"/sleef
  git config submodule."third_party/ideep".url "${srcdir}"/ideep
  git submodule update
}

build() {
  export USE_OPENCV=OFF # Caffe2 is not compatible with OpenCV4: pending https://github.com/pytorch/pytorch/pull/9966
  export USE_FFMPEG=ON
  export USE_MKLDNN=ON
  export USE_NNPACK=ON # A bit redundant with MKLDNN hopefully PyTorch choose the best depending on op
  export USE_CUDA=ON
  export USE_CUDNN=ON
  export USE_NERVANAGPU=OFF # Hopefully CUDNN integrated those
  export USE_OPENCL=ON
  export USE_OPENMP=ON
  export USE_NUMPY=ON
  export USE_MAGMA=ON
  
  export CC=gcc-7
  export CXX=g++-7
  export CUDAHOSTCXX=g++-7
  export CUDA_HOME=/opt/cuda
  export CUDNN_LIB_DIR=/opt/cuda/lib64
  export CUDNN_INCLUDE_DIR=/opt/cuda/include
  export TORCH_CUDA_ARCH_LIST="6.1" # Consumer Pascal
  export MAGMA_HOME=/opt/magma 
  export OPENCV_INCLUDE_DIRS=/usr/include/opencv4
  export FFMPEG_INCLUDE_DIR=/usr/include # libavcodec, libavutils
  export FFMPEG_LIBRARIES=/usr/lib # libavcodec
  # export CUB_INCLUDE_DIRS # For system CUB, otherwise PyTorch picks it from thirdparty submodules

  # unfortunately PyTorch doesn't pick up Intel OpenMP
  # And Caffe2 doesn't pick up any OpenMP at all (because I didn't install LLVM OMP runtime)
  # https://github.com/pytorch/pytorch/issues/12535
  export OpenMP_C_FLAGS="-liomp5"
  export OpenMP_CXX_FLAGS="-liomp5"
  export OpenMP_C_LIB_NAMES="iomp5"
  export OpenMP_CXX_LIB_NAMES="iomp5"
  export CMAKE_EXE_LINKER_FLAGS="-liomp5"

  source /opt/intel/mkl/bin/mklvars.sh intel64
  source /opt/intel/pkg_bin/compilervars.sh intel64


  cd "$srcdir/${_pkgname}"
  python setup.py build
}

package() {
  cd "$srcdir/${_pkgname}"
  python setup.py install --root="$pkgdir"/ --optimize=1 --skip-build
  install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE.txt"
}

# vim:set ts=2 sw=2 et:
