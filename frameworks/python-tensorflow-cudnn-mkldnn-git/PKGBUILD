# Updated by Mamy Ratsimbazafy
# Maintainer: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Adria Arrufat (archdria) <adria.arrufat+AUR@protonmail.ch>
# Contributor: Thibault Lorrain (fredszaq) <fredszaq@gmail.com>

pkgbase=tensorflow
pkgname=(tensorflow-cudnn-mkldnn python-tensorflow-cudnn-mkldnn)
pkgver=1.12.0
_pkgver=1.12.0
pkgrel=4
pkgdesc="Library for computation using data flow graphs for scalable machine learning"
url="https://www.tensorflow.org/"
license=('APACHE')
arch=('x86_64')
makedepends=('bazel' 'python-numpy' 'cuda' 'nvidia-utils' 'nccl'
             'cudnn' 'mkl-dnn' 'python-pip' 'python-wheel' 'python-setuptools' 'python-h5py'
             'python-keras-applications' 'python-keras-preprocessing')
optdepends=('tensorboard: Tensorflow visualization toolkit')
source=("https://github.com/tensorflow/tensorflow/archive/v${_pkgver}.tar.gz"
        # python37.patch
        # protobuf-python37.patch
        # protobuf-python37-apply.patch
        )
sha512sums=('b145a9118856aa00a829ab6af89bff4e1e131371c96d77b07532544112803c4574d97ef224b28a64437a2af8db4286786dc0b4123efe110b2aa734b443a7e238'
            # '9e3954c10f9dc11d3b6a6a0162061511eaa81b934debaf4f159f11f60e235e6f2762a216d10927695497e8cf7065855d343cd1573727da3f6355e669ea7c6788'
            # 'a248658d9466bd3aba854b429ce2c1981c5efff5196dead7b2a8c216b9a6cac781a9f487db5ff4513becc4e6d6cc14c494768a859e1f51a9eea848d8f0178204'
            # '081ff5e35b643c63d3fc28d75266fe13fe70f8f274c862ff7959ec360654ae15593e8c45379a6b23c91fb475af6b9315188f3bfec866fddbbb86a0613d3aa738'
            )

prepare() {
  # https://github.com/tensorflow/tensorflow/issues/20517
  # patch -d tensorflow-${_pkgver} -Np1 -i ${srcdir}/python37.patch
  # https://github.com/tensorflow/tensorflow/issues/20950
  # patch -d tensorflow-${_pkgver} -Np1 -i ${srcdir}/protobuf-python37-apply.patch
  # cp ${srcdir}/protobuf-python37.patch tensorflow-${_pkgver}/third_party/

  cp -r tensorflow-${_pkgver} tensorflow-${_pkgver}-cudnn-mkldnn
  # These environment variables influence the behavior of the configure call below.
  export PYTHON_BIN_PATH=/usr/bin/python
  export USE_DEFAULT_PYTHON_LIB_PATH=1
  export TF_NEED_JEMALLOC=1
  export TF_NEED_KAFKA=0
  export TF_NEED_OPENCL_SYCL=0
  export TF_NEED_AWS=0
  export TF_NEED_GCP=0
  export TF_NEED_HDFS=0
  export TF_NEED_S3=0
  export TF_ENABLE_XLA=1
  export TF_NEED_GDR=0
  export TF_NEED_VERBS=0
  export TF_NEED_OPENCL=0
  export TF_NEED_MPI=0
  export TF_NEED_TENSORRT=0
  export TF_NEED_NGRAPH=0
  export TF_NEED_IGNITE=0
  export TF_NEED_ROCM=0
  export TF_SET_ANDROID_WORKSPACE=0
  export TF_DOWNLOAD_CLANG=0
  export TF_NCCL_VERSION=2.3
  export NCCL_INSTALL_PATH=/usr
}

build() {
  cd ${srcdir}/tensorflow-${_pkgver}-cudnn-mkldnn
  export CC_OPT_FLAGS="-march=native"
  export TF_NEED_CUDA=1
  export GCC_HOST_COMPILER_PATH=/usr/bin/gcc-7
  export TF_CUDA_CLANG=0
  # export CLANG_CUDA_COMPILER_PATH=/usr/bin/clang
  export CUDA_TOOLKIT_PATH=/opt/cuda
  export TF_CUDA_VERSION=$($CUDA_TOOLKIT_PATH/bin/nvcc --version | sed -n 's/^.*release \(.*\),.*/\1/p')
  export TF_CUDNN_VERSION=$(sed -n 's/^#define CUDNN_MAJOR\s*\(.*\).*/\1/p' /usr/include/cudnn.h)
  export CUDNN_INSTALL_PATH=/usr/lib
  export TF_CUDA_COMPUTE_CAPABILITIES=6.1,7.0,7.5 # Support Pascal, Volta and Turing main SKUs (Quadro GP100 and Tesla P100 are not supported but Titan V, Quadro GV100 and Tesla V100 are. Jetsons and Drice SOCs not supported)
  ./configure
  bazel build --config=opt --config=cuda --config=mkl --copt=-mavx512f --copt=-mfma //tensorflow:libtensorflow.so //tensorflow/tools/pip_package:build_pip_package
  bazel-bin/tensorflow/tools/pip_package/build_pip_package ${srcdir}/tmpcumkldnn
}

package_tensorflow-cudnn-mkldnn() {
  depends=(cuda cudnn nccl mkl-dnn)
  conflicts=(tensorflow)
  provides=(tensorflow tensorflow-cuda)
  pkgdesc="Library for computation using data flow graphs for scalable machine learning (with CUDNN and MKLDNN optimizations)"

  cd ${srcdir}/tensorflow-${_pkgver}-cudnn-mkldnn

  tensorflow/c/generate-pc.sh --prefix=/usr --version=${pkgver}
  install -Dm644 tensorflow.pc ${pkgdir}/usr/lib/pkgconfig/tensorflow.pc
  install -Dm755 bazel-bin/tensorflow/libtensorflow.so ${pkgdir}/usr/lib/libtensorflow.so
  install -Dm755 bazel-bin/tensorflow/libtensorflow_framework.so ${pkgdir}/usr/lib/libtensorflow_framework.so
  install -Dm644 tensorflow/c/c_api.h ${pkgdir}/usr/include/tensorflow/c/c_api.h
  install -Dm644 LICENSE ${pkgdir}/usr/share/licenses/${pkgname}/LICENSE
}

package_python-tensorflow-cudnn-mkldnn() {
  depends=(python-numpy cuda cudnn mkl-dnn python-pycuda python-protobuf absl-py nccl python-h5py python-keras-applications python-keras-preprocessing)
  conflicts=(python-tensorflow)
  provides=(python-tensorflow python-tensorflow-cuda)
  pkgdesc="Library for computation using data flow graphs for scalable machine learning (with CUDNN and MKLDNN optimizations)"

  cd ${srcdir}/tensorflow-${_pkgver}-cudnn-mkldnn

  WHEEL_PACKAGE=$(find ${srcdir}/tmpcumkldnn -name "tensor*.whl")
  pip install --ignore-installed --upgrade --root $pkgdir/ $WHEEL_PACKAGE --no-dependencies

  # tensorboard has been separated from upstream but they still install it with
  # tensorflow. I don't know what kind of sense that makes but we have to clean
  # it out from this pacakge.
  rm -rf ${pkgdir}/usr/bin/tensorboard

  install -Dm644 LICENSE ${pkgdir}/usr/share/licenses/${pkgname}/LICENSE
}

# vim:set ts=2 sw=2 et:
